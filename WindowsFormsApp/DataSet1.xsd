<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SchoolDbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SchoolDbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApp.Properties.Settings.GlobalReference.Default.SchoolDbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassesTableAdapter" GeneratorDataComponentClassName="ClassesTableAdapter" Name="Classes" UserDataComponentName="ClassesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.Classes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Classes] WHERE (([ID] = @Original_ID) AND ([ClassNumber] = @Original_ClassNumber))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Classes] ([ClassNumber]) VALUES (@ClassNumber);
SELECT ID, ClassNumber FROM Classes WHERE (ClassNumber = @ClassNumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, ClassNumber FROM dbo.Classes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Classes] SET [ClassNumber] = @ClassNumber WHERE (([ID] = @Original_ID) AND ([ClassNumber] = @Original_ClassNumber));
SELECT ID, ClassNumber FROM Classes WHERE (ClassNumber = @ClassNumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="ClassNumber" DataSetColumn="ClassNumber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassroomTeachersTableAdapter" GeneratorDataComponentClassName="ClassroomTeachersTableAdapter" Name="ClassroomTeachers" UserDataComponentName="ClassroomTeachersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.ClassroomTeachers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ClassroomTeachers] ([ClassNumber], [TeacherID]) VALUES (@ClassNumber, @TeacherID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ClassNumber, TeacherID FROM dbo.ClassroomTeachers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ClassNumber" DataSetColumn="ClassNumber" />
              <Mapping SourceColumn="TeacherID" DataSetColumn="TeacherID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LessonsTableAdapter" GeneratorDataComponentClassName="LessonsTableAdapter" Name="Lessons" UserDataComponentName="LessonsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.Lessons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Lessons] WHERE (([LessonID] = @Original_LessonID) AND ([LessonName] = @Original_LessonName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LessonName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Lessons] ([LessonName]) VALUES (@LessonName);
SELECT LessonID, LessonName FROM Lessons WHERE (LessonName = @LessonName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LessonName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LessonID, LessonName FROM dbo.Lessons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Lessons] SET [LessonName] = @LessonName WHERE (([LessonID] = @Original_LessonID) AND ([LessonName] = @Original_LessonName));
SELECT LessonID, LessonName FROM Lessons WHERE (LessonName = @LessonName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LessonName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LessonName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LessonID" DataSetColumn="LessonID" />
              <Mapping SourceColumn="LessonName" DataSetColumn="LessonName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([StudentID] = @Original_StudentID) AND ([LName] = @Original_LName) AND ([FName] = @Original_FName) AND ([Address] = @Original_Address))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([LName], [FName], [Address]) VALUES (@LName, @FName, @Address);
SELECT StudentID, LName, FName, Address FROM Students WHERE (StudentID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, LName, FName, Address FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [LName] = @LName, [FName] = @FName, [Address] = @Address WHERE (([StudentID] = @Original_StudentID) AND ([LName] = @Original_LName) AND ([FName] = @Original_FName) AND ([Address] = @Original_Address));
SELECT StudentID, LName, FName, Address FROM Students WHERE (StudentID = @StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByStudentID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByStudentID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByStudentID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, LName, FName, Address FROM dbo.Students WHERE StudentID = @StudentID </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="SchoolDb.dbo.Students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsForConcreteClassesTableAdapter" GeneratorDataComponentClassName="StudentsForConcreteClassesTableAdapter" Name="StudentsForConcreteClasses" UserDataComponentName="StudentsForConcreteClassesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.StudentsForConcreteClasses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentsForConcreteClasses] ([StudentID], [ClassNumber]) VALUES (@StudentID, @ClassNumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, ClassNumber FROM dbo.StudentsForConcreteClasses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="ClassNumber" DataSetColumn="ClassNumber" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.StudentsForConcreteClasses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByClassNumber" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByClassNumber" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByClassNumber">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, ClassNumber FROM dbo.StudentsForConcreteClasses WHERE ClassNumber = @ClassNumber</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ClassNumber" ColumnName="ClassNumber" DataSourceName="SchoolDb.dbo.StudentsForConcreteClasses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ClassNumber" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ClassNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.StudentsForConcreteClasses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByStudentID_inClasses" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByStudentID_inClasses" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillByStudentID_inClasses">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, ClassNumber FROM dbo.StudentsForConcreteClasses WHERE StudentID = @StudentID </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="SchoolDb.dbo.StudentsForConcreteClasses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachersTableAdapter" GeneratorDataComponentClassName="TeachersTableAdapter" Name="Teachers" UserDataComponentName="TeachersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.Teachers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teachers] WHERE (([TeacherID] = @Original_TeacherID) AND ([LName] = @Original_LName) AND ([FName] = @Original_FName) AND ([MName] = @Original_MName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teachers] ([LName], [FName], [MName]) VALUES (@LName, @FName, @MName);
SELECT TeacherID, LName, FName, MName FROM Teachers WHERE (TeacherID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherID, LName, FName, MName FROM dbo.Teachers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teachers] SET [LName] = @LName, [FName] = @FName, [MName] = @MName WHERE (([TeacherID] = @Original_TeacherID) AND ([LName] = @Original_LName) AND ([FName] = @Original_FName) AND ([MName] = @Original_MName));
SELECT TeacherID, LName, FName, MName FROM Teachers WHERE (TeacherID = @TeacherID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TeacherID" ColumnName="TeacherID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherID" DataSetColumn="TeacherID" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="MName" DataSetColumn="MName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeatcherAndLessonsTableAdapter" GeneratorDataComponentClassName="TeatcherAndLessonsTableAdapter" Name="TeatcherAndLessons" UserDataComponentName="TeatcherAndLessonsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolDbConnectionString (Settings)" DbObjectName="SchoolDb.dbo.TeatcherAndLessons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TeatcherAndLessons] ([TeacherID], [LessonName]) VALUES (@TeacherID, @LessonName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LessonName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherID, LessonName FROM dbo.TeatcherAndLessons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherID" DataSetColumn="TeacherID" />
              <Mapping SourceColumn="LessonName" DataSetColumn="LessonName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSet1" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Classes" msprop:Generator_RowClassName="ClassesRow" msprop:Generator_RowEvHandlerName="ClassesRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassesRowDeleted" msprop:Generator_RowDeletingName="ClassesRowDeleting" msprop:Generator_RowEvArgName="ClassesRowChangeEvent" msprop:Generator_TablePropName="Classes" msprop:Generator_RowChangedName="ClassesRowChanged" msprop:Generator_UserTableName="Classes" msprop:Generator_RowChangingName="ClassesRowChanging" msprop:Generator_TableClassName="ClassesDataTable" msprop:Generator_TableVarName="tableClasses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="ClassNumber" msprop:Generator_UserColumnName="ClassNumber" msprop:Generator_ColumnPropNameInTable="ClassNumberColumn" msprop:Generator_ColumnPropNameInRow="ClassNumber" msprop:Generator_ColumnVarNameInTable="columnClassNumber" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ClassroomTeachers" msprop:Generator_RowClassName="ClassroomTeachersRow" msprop:Generator_RowEvHandlerName="ClassroomTeachersRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassroomTeachersRowDeleted" msprop:Generator_RowDeletingName="ClassroomTeachersRowDeleting" msprop:Generator_RowEvArgName="ClassroomTeachersRowChangeEvent" msprop:Generator_TablePropName="ClassroomTeachers" msprop:Generator_RowChangedName="ClassroomTeachersRowChanged" msprop:Generator_UserTableName="ClassroomTeachers" msprop:Generator_RowChangingName="ClassroomTeachersRowChanging" msprop:Generator_TableClassName="ClassroomTeachersDataTable" msprop:Generator_TableVarName="tableClassroomTeachers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ClassNumber" msprop:Generator_UserColumnName="ClassNumber" msprop:Generator_ColumnPropNameInTable="ClassNumberColumn" msprop:Generator_ColumnPropNameInRow="ClassNumber" msprop:Generator_ColumnVarNameInTable="columnClassNumber" type="xs:int" />
              <xs:element name="TeacherID" msprop:Generator_UserColumnName="TeacherID" msprop:Generator_ColumnPropNameInTable="TeacherIDColumn" msprop:Generator_ColumnPropNameInRow="TeacherID" msprop:Generator_ColumnVarNameInTable="columnTeacherID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Lessons" msprop:Generator_RowClassName="LessonsRow" msprop:Generator_RowEvHandlerName="LessonsRowChangeEventHandler" msprop:Generator_RowDeletedName="LessonsRowDeleted" msprop:Generator_RowDeletingName="LessonsRowDeleting" msprop:Generator_RowEvArgName="LessonsRowChangeEvent" msprop:Generator_TablePropName="Lessons" msprop:Generator_RowChangedName="LessonsRowChanged" msprop:Generator_UserTableName="Lessons" msprop:Generator_RowChangingName="LessonsRowChanging" msprop:Generator_TableClassName="LessonsDataTable" msprop:Generator_TableVarName="tableLessons">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LessonID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="LessonID" msprop:Generator_ColumnPropNameInTable="LessonIDColumn" msprop:Generator_ColumnPropNameInRow="LessonID" msprop:Generator_ColumnVarNameInTable="columnLessonID" type="xs:int" />
              <xs:element name="LessonName" msprop:Generator_UserColumnName="LessonName" msprop:Generator_ColumnPropNameInTable="LessonNameColumn" msprop:Generator_ColumnPropNameInRow="LessonName" msprop:Generator_ColumnVarNameInTable="columnLessonName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msdata:CaseSensitive="False" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
              <xs:element name="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnVarNameInTable="columnLName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_UserColumnName="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnVarNameInTable="columnFName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Address" msprop:Generator_UserColumnName="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnVarNameInTable="columnAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentsForConcreteClasses" msprop:Generator_RowClassName="StudentsForConcreteClassesRow" msprop:Generator_RowEvHandlerName="StudentsForConcreteClassesRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsForConcreteClassesRowDeleted" msprop:Generator_RowDeletingName="StudentsForConcreteClassesRowDeleting" msprop:Generator_RowEvArgName="StudentsForConcreteClassesRowChangeEvent" msprop:Generator_TablePropName="StudentsForConcreteClasses" msprop:Generator_RowChangedName="StudentsForConcreteClassesRowChanged" msprop:Generator_UserTableName="StudentsForConcreteClasses" msprop:Generator_RowChangingName="StudentsForConcreteClassesRowChanging" msprop:Generator_TableClassName="StudentsForConcreteClassesDataTable" msprop:Generator_TableVarName="tableStudentsForConcreteClasses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
              <xs:element name="ClassNumber" msprop:Generator_UserColumnName="ClassNumber" msprop:Generator_ColumnPropNameInTable="ClassNumberColumn" msprop:Generator_ColumnPropNameInRow="ClassNumber" msprop:Generator_ColumnVarNameInTable="columnClassNumber" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teachers" msprop:Generator_RowClassName="TeachersRow" msprop:Generator_RowEvHandlerName="TeachersRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachersRowDeleted" msprop:Generator_RowDeletingName="TeachersRowDeleting" msprop:Generator_RowEvArgName="TeachersRowChangeEvent" msprop:Generator_TablePropName="Teachers" msprop:Generator_RowChangedName="TeachersRowChanged" msprop:Generator_UserTableName="Teachers" msprop:Generator_RowChangingName="TeachersRowChanging" msprop:Generator_TableClassName="TeachersDataTable" msprop:Generator_TableVarName="tableTeachers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="TeacherID" msprop:Generator_ColumnPropNameInTable="TeacherIDColumn" msprop:Generator_ColumnPropNameInRow="TeacherID" msprop:Generator_ColumnVarNameInTable="columnTeacherID" type="xs:int" />
              <xs:element name="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnVarNameInTable="columnLName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_UserColumnName="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnVarNameInTable="columnFName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MName" msprop:Generator_UserColumnName="MName" msprop:Generator_ColumnPropNameInTable="MNameColumn" msprop:Generator_ColumnPropNameInRow="MName" msprop:Generator_ColumnVarNameInTable="columnMName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Salary" msprop:Generator_ColumnPropNameInRow="Salary" msprop:Generator_ColumnPropNameInTable="SalaryColumn" msprop:Generator_ColumnVarNameInTable="columnSalary" msprop:Generator_UserColumnName="Salary" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TeatcherAndLessons" msprop:Generator_RowClassName="TeatcherAndLessonsRow" msprop:Generator_RowEvHandlerName="TeatcherAndLessonsRowChangeEventHandler" msprop:Generator_RowDeletedName="TeatcherAndLessonsRowDeleted" msprop:Generator_RowDeletingName="TeatcherAndLessonsRowDeleting" msprop:Generator_RowEvArgName="TeatcherAndLessonsRowChangeEvent" msprop:Generator_TablePropName="TeatcherAndLessons" msprop:Generator_RowChangedName="TeatcherAndLessonsRowChanged" msprop:Generator_UserTableName="TeatcherAndLessons" msprop:Generator_RowChangingName="TeatcherAndLessonsRowChanging" msprop:Generator_TableClassName="TeatcherAndLessonsDataTable" msprop:Generator_TableVarName="tableTeatcherAndLessons">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherID" msprop:Generator_UserColumnName="TeacherID" msprop:Generator_ColumnPropNameInTable="TeacherIDColumn" msprop:Generator_ColumnPropNameInRow="TeacherID" msprop:Generator_ColumnVarNameInTable="columnTeacherID" type="xs:int" />
              <xs:element name="LessonName" msprop:Generator_UserColumnName="LessonName" msprop:Generator_ColumnPropNameInTable="LessonNameColumn" msprop:Generator_ColumnPropNameInRow="LessonName" msprop:Generator_ColumnVarNameInTable="columnLessonName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Classes" />
      <xs:field xpath="mstns:ClassNumber" />
    </xs:unique>
    <xs:unique name="Lessons_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Lessons" />
      <xs:field xpath="mstns:LessonName" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:StudentID" />
    </xs:unique>
    <xs:unique name="Teachers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teachers" />
      <xs:field xpath="mstns:TeacherID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Classroom__Class__4316F928" msdata:parent="Classes" msdata:child="ClassroomTeachers" msdata:parentkey="ClassNumber" msdata:childkey="ClassNumber" msprop:Generator_UserParentTable="Classes" msprop:Generator_UserChildTable="ClassroomTeachers" msprop:Generator_RelationVarName="relationFK__Classroom__Class__4316F928" msprop:Generator_ChildPropName="GetClassroomTeachersRows" msprop:Generator_UserRelationName="FK__Classroom__Class__4316F928" msprop:Generator_ParentPropName="ClassesRow" />
      <msdata:Relationship name="FK__Classroom__Teach__440B1D61" msdata:parent="Teachers" msdata:child="ClassroomTeachers" msdata:parentkey="TeacherID" msdata:childkey="TeacherID" msprop:Generator_UserParentTable="Teachers" msprop:Generator_UserChildTable="ClassroomTeachers" msprop:Generator_RelationVarName="relationFK__Classroom__Teach__440B1D61" msprop:Generator_ChildPropName="GetClassroomTeachersRows" msprop:Generator_ParentPropName="TeachersRow" msprop:Generator_UserRelationName="FK__Classroom__Teach__440B1D61" />
      <msdata:Relationship name="FK__StudentsF__Class__412EB0B6" msdata:parent="Classes" msdata:child="StudentsForConcreteClasses" msdata:parentkey="ClassNumber" msdata:childkey="ClassNumber" msprop:Generator_UserParentTable="Classes" msprop:Generator_UserChildTable="StudentsForConcreteClasses" msprop:Generator_RelationVarName="relationFK__StudentsF__Class__412EB0B6" msprop:Generator_ChildPropName="GetStudentsForConcreteClassesRows" msprop:Generator_UserRelationName="FK__StudentsF__Class__412EB0B6" msprop:Generator_ParentPropName="ClassesRow" />
      <msdata:Relationship name="FK__StudentsF__Stude__403A8C7D" msdata:parent="Students" msdata:child="StudentsForConcreteClasses" msdata:parentkey="StudentID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="StudentsForConcreteClasses" msprop:Generator_RelationVarName="relationFK__StudentsF__Stude__403A8C7D" msprop:Generator_ChildPropName="GetStudentsForConcreteClassesRows" msprop:Generator_UserRelationName="FK__StudentsF__Stude__403A8C7D" msprop:Generator_ParentPropName="StudentsRow" />
      <msdata:Relationship name="FK__TeatcherA__Lesso__3A81B327" msdata:parent="Lessons" msdata:child="TeatcherAndLessons" msdata:parentkey="LessonName" msdata:childkey="LessonName" msprop:Generator_UserParentTable="Lessons" msprop:Generator_UserChildTable="TeatcherAndLessons" msprop:Generator_RelationVarName="relationFK__TeatcherA__Lesso__3A81B327" msprop:Generator_ChildPropName="GetTeatcherAndLessonsRows" msprop:Generator_UserRelationName="FK__TeatcherA__Lesso__3A81B327" msprop:Generator_ParentPropName="LessonsRow" />
      <msdata:Relationship name="FK__TeatcherA__Teach__398D8EEE" msdata:parent="Teachers" msdata:child="TeatcherAndLessons" msdata:parentkey="TeacherID" msdata:childkey="TeacherID" msprop:Generator_UserParentTable="Teachers" msprop:Generator_UserChildTable="TeatcherAndLessons" msprop:Generator_RelationVarName="relationFK__TeatcherA__Teach__398D8EEE" msprop:Generator_ChildPropName="GetTeatcherAndLessonsRows" msprop:Generator_UserRelationName="FK__TeatcherA__Teach__398D8EEE" msprop:Generator_ParentPropName="TeachersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>